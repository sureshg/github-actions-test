name: Github Action Test

env:
  author: Suresh
  name: Github Action Test
  deployKey: test 

on:
  push:
    branches: 
      - main
      - release/*
    tags:
      - '*'
  pull_request:
     branches: 
       - main
  schedule:
       - cron: "0 0 * * *"
       
  workflow_dispatch:
   
            
jobs:
  build:
    name: 🏗️ Java app on ${{ matrix.os }} for JDK ${{ matrix.java }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    env:
      jdk-version: ${{ matrix.java }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        java: ['17']
        include:
          # includes a new variable of os specific binary name for the matrix leg matching the os and version
          - os: ubuntu-latest
            bin-name: hello-linux
          - os: macos-latest
            bin-name: hello-mac
          - os: windows-latest
            bin-name: hello-win.exe  
        
    steps:
      - name: Checking out the source code
        uses: actions/checkout@v3    
        id: code-checkout
        timeout-minutes: 2
        if: contains(matrix.os, 'latest')
        env:
          name: checkout 
  
      - name: Gradle cache
        uses: actions/cache@v3.0.8
        if:  ${{ false }}
        id: gradle-cache
        continue-on-error: true
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Set up JDK
        id: setup-jdk
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }} 
          # cache: 'gradle'
        
      - name: Run Java app
        run: |
           java --show-version Main.java
        shell: bash     
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}

      - name: Step failed
        if: failure()
        run: |
          echo This previous step failed "${author}"
          
      - name: Push and commit a file.
        if: runner.os == 'Linux'
        run: |
          date > generated.txt
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "generated"
          git push origin HEAD:main
          # git push origin HEAD:${{ github.event.repository.default_branch }}
          
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
        
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
        
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
        
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
        
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
        
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"     

  container-build:
    name: 🚢 Java on Container
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        jdk: [ "19-slim", "19-alpine" ]

    container:
      image: openjdk:${{ matrix.jdk }}

    steps:
      - name: Check out the source code
        uses: actions/checkout@v3

      - name: Run Java App on OpenJDK ${{ matrix.jdk }} container image
        if: always()
        run: |
          java --show-version Main.java
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        shell: sh  

      - name: Github Action Contexts
        run: |
          echo "$JOB_CONTEXT"
          echo "$STEPS_CONTEXT"
          echo "$RUNNER_CONTEXT"
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
          STEPS_CONTEXT: ${{ toJson(steps) }}
          RUNNER_CONTEXT: ${{ toJson(runner) }}
