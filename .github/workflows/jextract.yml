name: jextract

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  jextract:
    name: OpenJDK (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest, macos-13 ]
        include:
          - os: ubuntu-latest
            script: linux.sh
          - os: macos-latest
            script: macos.sh
          - os: macos-13
            script: macos.sh
          - os: windows-latest
            script: windows.sh

    steps:
      - uses: actions/checkout@v4

      - name: Set OS, Arch and Package
        run: jextract/gen/script/set-package.sh

      - name: Install jextract latest build
        id: setup-jextract
        uses: oracle-actions/setup-java@main
        with:
          website: jdk.java.net
          release: 'jextract'
          version: latest
          install: true

      - name: Install OpenJDK EA latest build
        id: setup-java
        uses: oracle-actions/setup-java@main
        with:
          website: jdk.java.net
          release: 'ea'
          version: latest
          install: true


      - name: Run jextract on ${{ matrix.os }}
        run: |
          java -version
          jextract --version
          jextract/gen/script/${{ matrix.script }}

      - name: Checkin the generated source
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          create_branch: true
          branch: update-${{ matrix.os }}
          commit_message: "Generated source using jextract"

  merge:
    name: Merge branches
    runs-on: ubuntu-latest
    needs: jextract
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Clean up, merge, and delete branches
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          rm -rf jextract/gen/src/*
          git add jextract/gen/src/*
          for branch in $(git branch -r | grep 'update-'); do
            git merge --no-ff $branch -m "Merge $branch"
            git push origin --delete ${branch#origin/}
          done
          git push origin main