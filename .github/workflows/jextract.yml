name: jextract

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  jextract:
    name: OpenJDK ${{ matrix.release }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest, macos-13 ]
        release: [ 'jextract' ]
        include:
          - os: ubuntu-latest
            header: jextract/headers/ioctl.h
            package: linux.x64
          - os: macos-latest
            header: jextract/headers/ioctl.h
            package: macos.arm64
          - os: macos-13
            header: jextract/headers/ioctl.h
            package: macos.amd64
          - os: windows-latest
            header: jextract/headers/windows.h
            package: windows.x64

    steps:
      - uses: actions/checkout@v4

      - name: Install ${{ matrix.release }} latest build
        id: setup-java
        uses: oracle-actions/setup-java@main
        with:
          website: jdk.java.net
          release: ${{ matrix.release }}
          version: latest
          install: true

      - name: Run jextract on ${{ env.RUNNER_OS }}
        run: |
          printf "Jextract Version: \n" 
          jextract --version
          
          if [ "$RUNNER_ARCH" = "ARM64" ]; then
             ARCH="arm64"
          else
             ARCH="$RUNNER_ARCH"
          fi
          RUNNER_JAVA_HOME_VAR="JAVA_HOME_21_${ARCH}"
          
          echo "ARCH --------------> ${RUNNER_ARCH}"
          echo "RUNNER_JAVA_HOME --> ${!RUNNER_JAVA_HOME_VAR}"
          echo "JAVA_HOME ---------> $JAVA_HOME"
          echo "OS ----------------> $RUNNER_OS"
          echo "OS Type -----------> $OSTYPE"
          echo "---------------------------------------"

          echo "------- JAVA_HOME -------"
          ls -ltrh "${!RUNNER_JAVA_HOME_VAR}"
          echo "-------------------------"
          
          echo "------- Env Vars -------"
          printenv
          echo "-------------------------"

          
       
